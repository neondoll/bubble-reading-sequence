"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

scalar Mixed @scalar(class: "MLL\\GraphQLScalars\\Mixed")

type Query {
    land(id: ID @eq): Land @find
    lands: [Land] @all
    realEstate(id: ID @eq) : RealEstate @find
    realEstates : [RealEstate] @all
    site(id: ID @eq): Site @find
    sites: [Site] @all
    siteGroup(id: ID @eq): SiteGroup @find
    siteGroups: [SiteGroup] @all
    user(id: ID @eq): User @find
    users: [User] @all
}

input SiteFilter {
    text: String
}

input SiteGroupFilter {
    text: String
}

type Land {
    id: ID!
    id_org: Int
    assignment: String
    address: String
    cadastral_number: String
    latitude: Float
    longitude: Float
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

type RealEstate {
    id: ID!
    id_org: Int
    land_id: Int
    name: String
    address: String
    cadastral_number: String
    latitude: Float
    longitude: Float
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

type Site {
    id: ID!
    title: String
    text: String
    href: String
    icon: String
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

type SiteGroup {
    id: ID!
    title: String
    sites: [Site]
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

type User {
    id: ID!
    name: String!
    middleName: String!
    lastName: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}
