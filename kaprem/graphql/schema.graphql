"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    adminFilter(pagination: Paginator!, where: AdminFilterWhere!): AdminFilterPaginator
    amount_funds_and_indicators_subsidy(id: ID @eq, organization_id: Int @eq): AmountFundsAndIndicatorsSubsidy @find
    building_constructions: [BuildingConstruction] @all
    depStatuses: [DepStatus] @all
    dictionaryRoles: [DictionaryPosition] @all
    file_list(type: Int!): [FileList]
    object(id: Int! @eq): ProgramObject @find @guard
    object_event_types: [ObjectEventsType] @all
    objStatuses: [ObjStatus] @all
    organization(id: Int! @eq): Organization @find
    organizations: [Organization] @all
    program(id: Int, org_id: Int): Program @guard
    realEstate(id_org: Int): [RealEstate] @guard
    regions: [Region] @all
    repair_types: [RepairType] @all
    subsidies(organization_id: Int @eq, code: String @eq, status_id: [Int] @eq): [Subsidy] @all
    subsidy(organization_id: Int @eq, code: String @eq, id: ID! @eq): Subsidy @find
    subsidy_accesses(organization_id: Int @eq, code: String @eq): [SubsidyAccess] @all
    subsidy_conclusions(subsidy_id: Int @eq): [SubsidyConclusion] @all
    subsidy_expected_results(subsidy_id: Int @eq): [SubsidyExpectedResult] @all
    subsidy_files(subsidy_id: Int @eq): [SubsidyFile] @all
    subsidy_need_justifications(subsidy_id: Int @eq): [SubsidyNeedJustification] @all
    subsidy_schedule_events(subsidy_id: Int @eq): [SubsidyScheduleEvent] @all
    subsidy_stages(subsidy_id: Int @eq): [SubsidyStage] @all
    user: User @auth @throttle
}

type AdminFilterPaginator {
    data: [AdminFilter!]!
    paginatorInfo: PaginatorInfo2!
}

type DictionaryPosition {
    id: ID
    value: String
}

type AdminFilter {
    org_id: Int
    region: String
    org_name: String
    file: ProgramFile
    sent: Boolean
    inn: String
}

input AdminFilterWhere {
    type: String
}

input Paginator {
    first: Int!
    page: Int!
}

type PaginatorInfo2 {
    count: Int
    page: Int

}

type OrgInfo {
    id: ID!
    program_id: Int
    org_id: Int
    p1: Float
    p2: Float
    p3: Float
    p4: Float
    p5: Float
    p6: Float
    p7: Float
    p8: Float
    p9: Float
    p10: Float
    p11: String
    p12: Float
    p13: Float
    p14: Float
    p15: Float
    p16: Float
    p17: Float
    p18: Float
    p19: Float
    p20: String
    created_at: DateTime
    updated_at: DateTime
}

type RealEstate {
    id: ID!
    adr: String
    name: String
}

type FileList {
    id: ID!
    label: String
    descriptor: String
    type: Int
    required: Boolean
    created_at:DateTime
    updated_at:DateTime
}

type ObjectFile {
    id: Int
    obj_id: Int
    list_id: Int
    listItem: FileList
    label: String
    server_name: String
    name: String
    created_at: DateTime
    updated_at: DateTime
}

type ObjectStatus {
    id: ID
    object_id: Int
    dep_status_id: Int
    dep_status: DepStatus
    mgsu_status: ObjStatus
    dku_status_id: Int
    mgsu_status_id: Int
    step_date: String
    created_at: DateTime
    updated_at: DateTime
}

type DepStatus {
    id: ID
    value: String
    status: String
}

type ObjStatus {
    id: ID
    value: String
    status: String
}

type ProgramObject {
    id: ID
    program_id: Int
    org_id: Int
    real_estate_id: Int
    name:String
    name_dbi:String
    short_description:String

    events: [ObjectEvent]

    activities: [ObjectActivity]

    waited: [ObjectWaited]

    files: [ObjectFile]

    status: ObjectStatus

    dep_status: DepStatus

    mgsu_status: ObjStatus

    address:String
    address_dbi:String
    type_remont:Int
    type:Int
    priority:Int
    region_id:Int
    city:String
    cadastral_number:String
    build_year:Int
    exploy_year:Int
    kaprem_year:Int
    nadzor_orgs:String
    wear:Int
    osnovanie:String
    pravo_oper:String
    naznach:String
    naznach2:String
    pravo:String
    square:Float
    kaprem_square:Float
    totalFin:Float             @field(resolver: "App\\GraphQL\\Resolvers\\ProgramObjectResolver@resolveTotalFinance")
    totalCoFin:Float             @field(resolver: "App\\GraphQL\\Resolvers\\ProgramObjectResolver@resolveTotalCoFinance")
    square_ustav:Float
    square_ne_ustav:Float
    arenda:Float
    primechanie:String
    created_at:DateTime
    updated_at:DateTime
}

type ProgramFile {
    id: Int
    program_id: Int
    server_name: String
    name: String
    created_at: DateTime
    updated_at: DateTime
}

type Program {
    id: ID!
    org_id: Int
    square: Float
    cost_kaprem: Float
    p0201:Float
    p0210:Float
    psd: String
    # objects: [ProgramObject]
    year: Int
    sent: Boolean
    file: ProgramFile
    org: Organization
    contacts: [Contact]
    org_info: OrgInfo
    can_create_object: Boolean @field(resolver: "App\\GraphQL\\Resolvers\\ProgramResolver@resolveCanCreateObject")
    created_at: DateTime
    updated_at: DateTime
}

type ObjectWaited{
    id: ID!
    obj_id: Int
    element: Int
    aim: String
    plan: String
    changes: String
    created_at: DateTime
    updated_at: DateTime
}

type Region {
    id: ID!
    region: String
    created_at:DateTime
    updated_at:DateTime
}

type ObjectActivity {
    id: ID!
    obj_id: Int
    type: Int
    stage: Int
    p01: Boolean
    p02: String
    p03: String
    p04: Boolean
    p05: String
    created_at:DateTime
    updated_at:DateTime
}

type ObjectEventFile {
    id: ID!
    event_id: Int!
    server_name: String
    name: String
    created_at: DateTime
    updated_at: DateTime
    label: String
}

type ObjectEventsType {
    id: ID!,
    stage: String
    label: String
    value: Boolean
}

type ObjectEvent {
    id: ID!
    obj_id: Int
    stage: Float
    type_id: Int,
    type: ObjectEventsType
    parent: Int
    events: [ObjectEvent]
    file: ObjectEventFile
    p01: Boolean
    p02: String                 # @field(resolver: "App\\GraphQL\\Resolvers\\ObjectEventResolver@resolveDatep02")
    p03: String                 # @field(resolver: "App\\GraphQL\\Resolvers\\ObjectEventResolver@resolveDatep03")
    p04: Float
    p05: Float
    p06: Float
    p07: String
    end_stage: Boolean
    comment: String
    exp_mon: Boolean
    comment_mon: String
    created_at: DateTime
    updated_at: DateTime
}

type Organization {
    id: ID!
    name: String
    full_name: String
    short_name: String
    type_id: Int
    is_nauch: Boolean,
    founder_id: Int
    system_status: Int
    created_at: DateTime
    updated_at: DateTime
    region_id: Int
}

type Contact {
    id: ID!
    last_name: String
    name: String
    middle_name: String
    position: String
    role: String
    role_label: String
    phone: String
    email: String
    org_id: Int
    fio: String
    program_id: Int
    created_at: DateTime
    updated_at: DateTime
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    org_id: Int

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type AmountFundsAndIndicatorsSubsidy {
    id: ID!
    organization_id: Int!
    amount_funds_0201: Float
    amount_funds_0208: Float
    amount_funds_0210: Float
    indicator_0201: String
    indicator_0208: String
    indicator_0210: String
    created_at: DateTime
    updated_at: DateTime
}

type BuildingConstruction {
    id: ID!
    value: String!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
    type: Int
}

type RepairType {
    id: ID!
    value: String!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

type Subsidy {
    id: ID!
    organization_id: Int!
    code: String!
    name: String!
    short_description: String!
    repair_type_id: Int!
    address: String!
    region_id: Int!
    city: String!
    cadastral_number: String!
    build_year: String!
    start_year: String!
    last_fix_year: String!
    is_prescription: Int!
    prescription: String
    wear: String!
    reasons: String!
    pravo_op_upr: String!
    assignment: String!
    pravo_sobstv: String!
    square_total: Float!
    square_cap_rem: Float!
    used: Float!
    not_used: Float!
    in_rent: Float!
    note: String!
    status_id: Int!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
    real_estate_id: Int
    conclusions: [SubsidyConclusion] @hasMany
    files: [SubsidyFile] @hasMany
    organization: Organization @belongsTo
    region: Region @belongsTo
    repair_type: RepairType @belongsTo
    stages: [SubsidyStage] @hasMany
    status: SubsidyStatus @belongsTo
}

type SubsidyAccess {
    id: ID!
    organization_id: Int!
    code: String!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

type SubsidyConclusion {
    id: ID!
    subsidy_id: Int!
    name: String!
    extension: String!
    size: String!
    note: String!
    comment: String
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

type SubsidyExpectedResult {
    id: ID!
    subsidy_id: Int!
    goal: String!
    indicator: String!
    unit: String
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

type SubsidyFile {
    id: ID!
    subsidy_id: Int!
    title: String!
    type: Int!
    name: String!
    extension: String!
    size: Int!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

type SubsidyNeedJustification {
    id: ID!
    subsidy_id: Int!
    building_construction_id: Int!
    material: String
    srok_eks: String!
    is_kap_remont: Int!
    obosnovanie: String
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

type SubsidyScheduleEvent {
    id: ID!
    subsidy_id: Int!
    type: Int!
    title: String!
    date_start: String
    date_end: String
    budget_funding: Float
    offbudget_funding: Float
    created_at: DateTime
    updated_at: DateTime
    files: [SubsidyScheduleEventFile]
}

type SubsidyScheduleEventFile {
    id: ID!
    event_id: Int!
    subsidy_id: Int!
    type: Int!
    subtype: Int!
    title: String!
    is_link: Int!
    link: String
    name: String
    extension: String
    size: Int
    accepted_expert: Int!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

type SubsidyStage {
    id: ID!
    subsidy_id: Int!
    name: String!
    is_nessesary: Int!
    begin_date: String
    final_date: String
    realization_cost: Float
    kap_coast: Float
    finansee: Float
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

type SubsidyStatus {
    id: ID!
    value: String!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}
