variables:
  PORT: 22
  DEST_SERVER: "10.11.103.28"
  DEPLOY_USER: "jenkins28"
  DEST_PATH: /var/www/html/$CI_PROJECT_NAME

before_script:
  - eval $(ssh-agent -s)
  - echo "$SSH_KEY_28"|base64 -d | ssh-add -

stages:
  - deploy
  - install
  - migrate
  - build
  #- test
  - optimize
  - sync


#deploy_job1:
#  artifacts:
#      paths:
#      - build/
# only:
# - master
deploy_files:
  only:
    - master
  stage: deploy
  script:
    - EXCLUDE={'.git*','rsync.log','vendor/','storage/framework','storage/logs','storage/app/public',
    - EXCLUDE+='public/uploads/','public/js/','.env','public/storage/','storage/log',
    - EXCLUDE+='node_modules/','.pki/'}
    - '[ -f rsync.log ]&& rm rsync.log'
    - echo $EXCLUDE
    - >
      eval rsync -rl --del -e \'ssh -p $PORT\'  --exclude=$EXCLUDE ./
      $DEPLOY_USER@$DEST_SERVER:$DEST_PATH --log-file=rsync.log

composer_install:
  only:
    refs:
      - master
    changes:
      - composer.json
      - composer.lock
  stage: install
  script:
    - scp -P $PORT composer.{json,lock} $DEPLOY_USER@$DEST_SERVER:$DEST_PATH
    # Makes the server print the executed commands to stdout.
    # Required for monitoring and debug.
    - ssh -p$PORT $DEPLOY_USER@$DEST_SERVER "set -x &&cd $DEST_PATH &&composer install"

npm_install:
  only:
    refs:
      - master
    changes:
      - package.json
      - package-lock.json
  stage: install

  script:
    # Makes the server print the executed commands to stdout.
    # Required for monitoring and debug.
    - ssh -p$PORT $DEPLOY_USER@$DEST_SERVER "set -x &&cd $DEST_PATH &&npm install"

run_migrate:
  only:
    refs:
      - master
    changes:
      - database/migrations/*
  stage: migrate
  script:
    - >
      ssh -p$PORT $DEPLOY_USER@$DEST_SERVER "set -x && /usr/bin/php $DEST_PATH/artisan
      migrate --force"

build_front:
  only:
    refs:
      - master
    changes:
      - resources/js/**/*
  stage: build
  script:
    # Makes the server print the executed commands to stdout.
    # Required for monitoring and debug.
    - ssh -p$PORT $DEPLOY_USER@$DEST_SERVER "set -x &&cd $DEST_PATH &&npm run prod"

storage_link:
  only:
    refs:
      - master
  stage: optimize
  script:
    - ssh -p$PORT $DEPLOY_USER@$DEST_SERVER "set -x &&cd $DEST_PATH &&php artisan storage:link"

cache_clean:
  only:
    refs:
      - master
  stage: optimize
  script:
    - ssh -p$PORT $DEPLOY_USER@$DEST_SERVER "set -x &&cd $DEST_PATH &&php artisan optimize"

db_seed:
  only:
    refs:
      - master
  stage: sync
  when: manual
  script:
    - ssh -p$PORT $DEPLOY_USER@$DEST_SERVER "set -x &&cd $DEST_PATH &&php artisan db:seed"

#clear_before_test:
#  only:
#    refs:
#      - master
#  stage: test
#  when: on_success
#  script:
#    - ssh -p$PORT $DEPLOY_USER@$DEST_SERVER "set -x &&cd $DEST_PATH &&php artisan config:clear"
#
#api_test:
#  only:
#    refs:
#      - master
#  stage: test
#  when: on_success
#  script:
#    - ssh -p$PORT $DEPLOY_USER@$DEST_SERVER "set -x &&cd $DEST_PATH &&php artisan test"
